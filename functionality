# system wide userland

function rules.hint()
{
  [[ ! -f ${1} ]] && return 1
  local IFS=$'\n'
  local c=0
  for i in $(cat ${1}); do
    [[ ${c} -eq 0 ]] && { echo $i; c=1; } || { echo -en "\e[01;30m"; echo -n $i; echo -en "\e[00m"; echo ""; c=0; };
  done
}

## environ candles

function env.gcc.unset()
{
  [[ ${CFLAGS} ]] && unset CFLAGS CPPFLAGS MAKEFLAGS
  case $- in *i*) echo "CFLAGS CPPFLAGS MAKEFLAGS unset.";; esac
}


function env.gcc.set()
{
  # optimisation given by -O flag
  # coding standard given by -std flag
  # preprocessing error flags
  # cpu option flags
  # all of this shall be used on purpose.
  local march="x86-64"
  local mtune="native"
  [[ ${1} ]] && march=${1}
  [[ ${2} ]] && mtune=${2}
  CFLAGS="-march=$march -mtune=$mtune -fdiagnostics-color=always -pipe"
  CPPFLAGS=${CFLAGS}
  MAKEFLAGS=-j$(($(nproc)+1))
  export CFLAGS CPPFLAGS MAKEFLAGS
  case $- in *i*) echo $CFLAGS;; esac
}


# root access
if [[ $EUID -eq 0 ]]; then

  [[ -x /usr/bin/vim ]] && {
    [[ -f /etc/ssh/sshd_config ]] && \
      alias config.sshd='vim /etc/sshd/sshd_config'
    [[ -f /etc/ssh/ssh_config ]] && \
      alias config.ssh='vim /etc/sshd/ssh_config'
    [[ -f /etc/ssl/openssl.cnf ]] && \
      alias config.ssl='vim /etc/ssl/openssl.cnf'
  }

  function hello.world()
  {
    echo "Hello, world."
  }

fi

## throw

